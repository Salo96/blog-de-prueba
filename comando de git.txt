comando de git

git init: para iniciar un proyecto
git status: para saber el estado de proyecto
git add: "nombre del archivo": agrego al proyecto a git
git add . agrega TODOS LOS ARCHIVO
git commit -m "mensaje": envia el proyecto al repositorio

-------- configurar nombre de usuario y correo----------
git config --global user.name "Salomon Fabian"
$ git config --global user.email "salomon@gmail.com"
------------------------------------------------------

cat "nombre del archivo": leer el contenido del archivo
git log historia.txt: para ver la historia del archivo
git show historia.txt: me muestra la historia del archivo y los cambio
git diff: comparar las versiones
git reset "codigo commit" --hard: permite restaurar una version anterior (viajar en el tiempo OJO COMANDO PELIGROSO PUEDE ELIMINAR TODO SI SE EJECUTA MAL)
git log --stat: ver el historial con mas detalle
git checkout "codigo del commit" "nombre del archivo que quiero": para ver el archivo como estaba antes "OJO SI LE DOY UN COMMIT SE ELIMINA LOS ARCHIVO TRABAHADO DE HISTORIA"
git checkout master historia.txt: vuelvo en la actualidad
git commit -am "version mas actualizada": comando para agregar y guardar al repositorio (ad y commid nota para q funcione primero es el add .)


git branch "nombre de la rama": comando para crear nueva rama
git checkout "nombre de la rama": comando para moverme de rama (NOTA PRIMERO SE TIENE EJECUTAR ADD . Y EL COMMIT PARA PASAR DE RAMA)
git branch: me muestra la rama donde estoy
git merge CABECERA: LA RAMA CABECERA EN EL ULTIMO COMMIT PASARA SER AL MASTER (UNIR EL TRABAJO PERO SIEMPRE EN LA RAMA MASTER) (NOTA 2 MERGE = COMMIT)
git remote add origin "la direccion de github": subir al archivo en github
git push origin "master": ENVIO el proyecto a github de la rama "master"
git pull origin "master":  extraer y descargar contenido desde un repositorio remoto y actualizar al instante el repositorio local 
git pull origin master --allow-unrelated-histories: funcionar la rama master junto el github (readme)



 ----------------------ssh con git -----------------------

 Generar una nueva llave SSH: (Cualquier sistema operativo)

ssh-keygen -t rsa -b 4096 -C "youremail@example.com"

Comprobar proceso y agregarlo (Windows)

eval $(ssh-agent - s)
ssh-add ~/.ssh/id_rsa
Comprobar proceso y agregarlo (Mac)

eval "$(ssh-agent -s)"

---------------------------------------------------------------
$ git remote set-url origin git@github.com:Salo96/blog-de-prueba.git: te permite crear, ver y eliminar conexiones a otros repositorios. Las conexiones remotas se asemejan m√°s a marcadores que a enlaces directos con otros repositorios

ANTES DE HACER UN COMMIT SE TRAE EL PROYECTO DEL SERVIDO CON PULL

 git pull origin master: me traigo el origen del repositorio remoto y lo vamos a funcionar con la rama actual
